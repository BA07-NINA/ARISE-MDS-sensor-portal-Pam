version: "3"
services:
  sensor_portal_frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/sensor_portal_frontend.dockerfile
    image: sensor_portal_frontend_image
    ports:
      - '3000:3000'
    volumes:
      - ./frontend/src:/app/frontend/src
      - ./frontend/public:/app/frontend/public
    command: npm start
    depends_on:
      - sensor_portal_django
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_API_BASE_URL=http://127.0.0.1:8000/api
  sensor_portal_django:
    build:
      context: .
      dockerfile: ./dockerfiles/sensor_portal_django.dockerfile
    image: sensor_portal_django_image
    command: bash -c "python manage.py wait_for_db && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./file_storage:/media/file_storage
      - ./sensor_portal:/usr/src/sensor_portal
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://sensor_portal_redis:6379/0
      - CELERY_BACKEND=redis://sensor_portal_redis:6379/0
      - DEV=True
    depends_on:
      - sensor_portal_db
      - sensor_portal_redis
    restart: always
  sensor_portal_worker:
    image: sensor_portal_django_image
    command: bash -c "celery -A sensor_portal worker --autoscale 10,1 --loglevel=INFO -Q main_worker"
    volumes:
      - ./file_storage:/media/file_storage
      - ./sensor_portal:/usr/src/sensor_portal
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://sensor_portal_redis:6379/0
      - CELERY_BACKEND=redis://sensor_portal_redis:6379/0
      - DEV=True
    depends_on:
      - sensor_portal_db
      - sensor_portal_redis
      - sensor_portal_django
    restart: always
  sensor_portal_single_worker:
    image: sensor_portal_django_image
    command: bash -c "celery -A sensor_portal worker -c 1 --loglevel=INFO -Q single_worker"
    volumes:
      - ./file_storage:/media/file_storage
      - ./sensor_portal:/usr/src/sensor_portal
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://sensor_portal_redis:6379/0
      - CELERY_BACKEND=redis://sensor_portal_redis:6379/0
      - DEV=True
    depends_on:
      - sensor_portal_db
      - sensor_portal_redis
      - sensor_portal_django
    restart: always
  sensor_portal_beat:
    image: sensor_portal_django_image
    command: bash -c "celery -A sensor_portal beat --loglevel=INFO"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://sensor_portal_redis:6379/0
      - CELERY_BACKEND=redis://sensor_portal_redis:6379/0
      - DEV=True
    depends_on:
      - sensor_portal_db
      - sensor_portal_redis
      - sensor_portal_django
    volumes:
      - ./sensor_portal:/usr/src/sensor_portal
    restart: always
  sensor_portal_db:
    image: postgis/postgis:14-3.3
    volumes:
      - ./sensor_portal_database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
  sensor_portal_redis:
      image: "redis:alpine"
      restart: always
volumes:
  file_storage:
  sensor_portal_database:
